{"version":3,"sources":["components/form.js","components/weather.js","App.js","index.js"],"names":["Form","props","useState","city","setCity","className","htmlFor","type","id","placeholder","name","autoComplete","value","onChange","event","target","onClick","getWeather","Weather","temp","src","alt","main","description","icon","App","a","fetch","api_call","json","response","console","log","cod","setState","farenheit","weather","state","undefined","error","bind","Math","floor","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAceA,EAXF,SAAAC,GACT,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,sBAAKC,UAAU,sBAAf,UACA,uBAAOC,QAAQ,gBACf,uBAAOC,KAAK,OAAOC,GAAG,aAAaH,UAAU,uBAAuBI,YAAY,YAAYC,KAAK,OAAOC,aAAa,MAAMC,MAAOT,EAAMU,SAAU,SAAAC,GAAK,OAAIV,EAAQU,EAAMC,OAAOH,UAChL,wBAAQL,KAAK,SAASF,UAAU,qBAAqBW,QAAS,SAAAF,GAAK,OAAIb,EAAMgB,WAAWd,IAAxF,6BC2BOe,EA/BC,SAAAjB,GACZ,OACI,qBAAKI,UAAU,UAAf,SACI,sBAAKA,UAAU,eAAf,UACI,yCACA,qBAAKA,UAAU,2BAAf,SACI,oDAEJ,qBAAKA,UAAU,2BAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,wBAAf,SACI,wCAAWJ,EAAME,KAAjB,iBAAqCF,EAAMkB,KAA3C,YAGR,qBAAKd,UAAU,WAAf,SACA,qBAAKe,IAAI,mEAAmEC,IAAI,eAIxF,sBAAKhB,UAAU,2BAAf,UACI,uCAAUJ,EAAMqB,QAChB,8CAAiBrB,EAAMsB,eACvB,qBAAKH,IAAG,0CAAsCnB,EAAMuB,KAA5C,QAAwDH,IAAI,QAExE,cAAC,EAAD,eAAUpB,UC+BXwB,E,kDAlDb,aAAe,IAAD,8BACZ,gBAiBFR,WAlBc,uCAkBD,WAAMd,GAAN,iBAAAuB,EAAA,sEACYC,MAAM,qDAAD,OAAsDxB,EAAtD,iCAvBhB,qCAsBD,cACLyB,EADK,gBAEYA,EAASC,OAFrB,UAELC,EAFK,OAGXC,QAAQC,IAAIF,GAES,MAAjBA,EAASG,IALF,iDASX,EAAKC,SAAS,CACZ/B,KAAM2B,EAASpB,KACfS,KAAM,EAAKgB,UAAUL,EAASR,KAAKH,MACnCG,KAAMQ,EAASM,QAAQ,GAAGd,KAC1BC,YAAaO,EAASM,QAAQ,GAAGb,YACjCC,KAAMM,EAASM,QAAQ,GAAGZ,OAdjB,4CAlBC,sDAEZ,EAAKa,MAAQ,CACXlC,UAAMmC,EACNf,YAAa,GACbgB,OAAO,GAET,EAAKtB,WAAa,EAAKA,WAAWuB,KAAhB,gBAPN,E,6CAad,SAAUrB,GAER,OADWsB,KAAKC,MAAMvB,K,oBAsBxB,WACE,OACA,cAAC,EAAD,CACEhB,KAAMwC,KAAKN,MAAMlC,KACjBgB,KAAMwB,KAAKN,MAAMlB,KACjBG,KAAMqB,KAAKN,MAAMf,KACjBC,YAAaoB,KAAKN,MAAMd,YACxBC,KAAMmB,KAAKN,MAAMb,KACjBP,WAAY0B,KAAK1B,iB,GA7CL2B,IAAMC,WCHxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7861b197.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport \"../App.css\";\n\nconst Form = props => {\n    const [city, setCity] = useState('')\n    return (\n        <div className=\"nes-field is-inline\">\n        <label htmlFor=\"error_field\"></label>\n        <input type=\"text\" id=\"name_field\" className=\"nes-btn form-control\" placeholder=\"city name\" name=\"city\" autoComplete=\"off\" value={city} onChange={event => setCity(event.target.value)} />\n        <button type=\"submit\" className=\"nes-btn is-warning\" onClick={event => props.getWeather(city)}>Get Weather</button>\n        </div>\n    );\n};\n   \nexport default Form;","import React from 'react';\nimport \"../App.css\";\nimport Form from './form';\n\n\nconst Weather = props => {\n    return (\n        <div className=\"wrapper\">\n            <div className=\"header-title\">\n                <h1>Panahon</h1>\n                <div className=\"nes-container is-rounded\" >\n                    <p>8-Bit Weather App</p>\n                </div>\n                <div className=\"nes-container is-rounded\">\n                    <div className=\"message-list\">\n                        <div className=\"message -left\">\n                            <div className=\"nes-balloon from-left\">\n                                <p>Hello, {props.city}'s weather is {props.temp} F</p>\n                            </div>\n                        </div>\n                        <div className=\"cat-icon\">\n                        <img src=\"https://img.icons8.com/material-two-tone/35/000000/pixel-cat.png\" alt=\"cat\"/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"nes-container is-rounded\">\n                    <p>Main: {props.main}</p>\n                    <p>Description: {props.description}</p>\n                    <img src ={`http://openweathermap.org/img/w/${props.icon}.png`} alt=\"\" />\n                </div>\n                <Form {...props} />\n            </div>\n        </div>\n    );\n};\n\nexport default Weather;","import React from \"react\";\nimport './App.css';\nimport Weather from \"./components/weather\";\n\n\n\n//api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\nconst API_key = \"f74159910fbfeca96450bd09405e3b33\"\n//const DEFAULT_CITY = \"Seattle\"\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      city: undefined,\n      description: \"\",\n      error: false\n    }\n    this.getWeather = this.getWeather.bind(this);\n  //  this.getWeather(DEFAULT_CITY);\n  }\n\n\n\n  farenheit(temp) {\n    let far =  Math.floor(temp)\n    return far\n  }\n\n  getWeather = async city => {\n    const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${API_key}`)\n    const response = await api_call.json();\n    console.log(response)\n\n    if (response.cod === 404) {\n      return;\n    }\n\n    this.setState({\n      city: response.name,\n      temp: this.farenheit(response.main.temp),\n      main: response.weather[0].main,\n      description: response.weather[0].description,\n      icon: response.weather[0].icon\n    });\n\n  }\n  render(){\n    return(\n    <Weather \n      city={this.state.city}\n      temp={this.state.temp}\n      main={this.state.main}\n      description={this.state.description}\n      icon={this.state.icon} \n      getWeather={this.getWeather}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}